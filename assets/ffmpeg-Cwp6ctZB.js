var w=Object.defineProperty;var A=r=>{throw TypeError(r)};var m=(r,t,e)=>t in r?w(r,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):r[t]=e;var n=(r,t,e)=>m(r,typeof t!="symbol"?t+"":t,e),_=(r,t,e)=>t.has(r)||A("Cannot "+e);var s=(r,t,e)=>(_(r,t,"read from private field"),e?e.call(r):t.get(r)),h=(r,t,e)=>t.has(r)?A("Cannot add the same private member more than once"):t instanceof WeakSet?t.add(r):t.set(r,e),u=(r,t,e,i)=>(_(r,t,"write to private field"),i?i.call(r,e):t.set(r,e),e);var a;(function(r){r.LOAD="LOAD",r.EXEC="EXEC",r.WRITE_FILE="WRITE_FILE",r.READ_FILE="READ_FILE",r.DELETE_FILE="DELETE_FILE",r.RENAME="RENAME",r.CREATE_DIR="CREATE_DIR",r.LIST_DIR="LIST_DIR",r.DELETE_DIR="DELETE_DIR",r.ERROR="ERROR",r.DOWNLOAD="DOWNLOAD",r.PROGRESS="PROGRESS",r.LOG="LOG",r.MOUNT="MOUNT",r.UNMOUNT="UNMOUNT"})(a||(a={}));const N=(()=>{let r=0;return()=>r++})(),U=new Error("ffmpeg is not loaded, call `await ffmpeg.load()` first"),T=new Error("called FFmpeg.terminate()");var d,f,R,c,l,O,o;class y{constructor(){h(this,d,null);h(this,f,{});h(this,R,{});h(this,c,[]);h(this,l,[]);n(this,"loaded",!1);h(this,O,()=>{s(this,d)&&(s(this,d).onmessage=({data:{id:t,type:e,data:i}})=>{switch(e){case a.LOAD:this.loaded=!0,s(this,f)[t](i);break;case a.MOUNT:case a.UNMOUNT:case a.EXEC:case a.WRITE_FILE:case a.READ_FILE:case a.DELETE_FILE:case a.RENAME:case a.CREATE_DIR:case a.LIST_DIR:case a.DELETE_DIR:s(this,f)[t](i);break;case a.LOG:s(this,c).forEach(E=>E(i));break;case a.PROGRESS:s(this,l).forEach(E=>E(i));break;case a.ERROR:s(this,R)[t](i);break}delete s(this,f)[t],delete s(this,R)[t]})});h(this,o,({type:t,data:e},i=[],E)=>s(this,d)?new Promise((L,D)=>{const I=N();s(this,d)&&s(this,d).postMessage({id:I,type:t,data:e},i),s(this,f)[I]=L,s(this,R)[I]=D,E==null||E.addEventListener("abort",()=>{D(new DOMException(`Message # ${I} was aborted`,"AbortError"))},{once:!0})}):Promise.reject(U));n(this,"load",(t={},{signal:e}={})=>(s(this,d)||(u(this,d,new Worker(new URL("/one-image-everyday/assets/worker-DJ3jufjD.js",import.meta.url),{type:"module"})),s(this,O).call(this)),s(this,o).call(this,{type:a.LOAD,data:t},void 0,e)));n(this,"exec",(t,e=-1,{signal:i}={})=>s(this,o).call(this,{type:a.EXEC,data:{args:t,timeout:e}},void 0,i));n(this,"terminate",()=>{const t=Object.keys(s(this,R));for(const e of t)s(this,R)[e](T),delete s(this,R)[e],delete s(this,f)[e];s(this,d)&&(s(this,d).terminate(),u(this,d,null),this.loaded=!1)});n(this,"writeFile",(t,e,{signal:i}={})=>{const E=[];return e instanceof Uint8Array&&E.push(e.buffer),s(this,o).call(this,{type:a.WRITE_FILE,data:{path:t,data:e}},E,i)});n(this,"mount",(t,e,i)=>{const E=[];return s(this,o).call(this,{type:a.MOUNT,data:{fsType:t,options:e,mountPoint:i}},E)});n(this,"unmount",t=>{const e=[];return s(this,o).call(this,{type:a.UNMOUNT,data:{mountPoint:t}},e)});n(this,"readFile",(t,e="binary",{signal:i}={})=>s(this,o).call(this,{type:a.READ_FILE,data:{path:t,encoding:e}},void 0,i));n(this,"deleteFile",(t,{signal:e}={})=>s(this,o).call(this,{type:a.DELETE_FILE,data:{path:t}},void 0,e));n(this,"rename",(t,e,{signal:i}={})=>s(this,o).call(this,{type:a.RENAME,data:{oldPath:t,newPath:e}},void 0,i));n(this,"createDir",(t,{signal:e}={})=>s(this,o).call(this,{type:a.CREATE_DIR,data:{path:t}},void 0,e));n(this,"listDir",(t,{signal:e}={})=>s(this,o).call(this,{type:a.LIST_DIR,data:{path:t}},void 0,e));n(this,"deleteDir",(t,{signal:e}={})=>s(this,o).call(this,{type:a.DELETE_DIR,data:{path:t}},void 0,e))}on(t,e){t==="log"?s(this,c).push(e):t==="progress"&&s(this,l).push(e)}off(t,e){t==="log"?u(this,c,s(this,c).filter(i=>i!==e)):t==="progress"&&u(this,l,s(this,l).filter(i=>i!==e))}}d=new WeakMap,f=new WeakMap,R=new WeakMap,c=new WeakMap,l=new WeakMap,O=new WeakMap,o=new WeakMap;const p=r=>new Promise((t,e)=>{const i=new FileReader;i.onload=()=>{const{result:E}=i;E instanceof ArrayBuffer?t(new Uint8Array(E)):t(new Uint8Array)},i.onerror=E=>{var L,D;e(Error(`File could not be read! Code=${((D=(L=E==null?void 0:E.target)==null?void 0:L.error)==null?void 0:D.code)||-1}`))},i.readAsArrayBuffer(r)}),C=async r=>{let t;if(typeof r=="string")/data:_data\/([a-zA-Z]*);base64,([^"]*)/.test(r)?t=atob(r.split(",")[1]).split("").map(e=>e.charCodeAt(0)):t=await(await fetch(r)).arrayBuffer();else if(r instanceof URL)t=await(await fetch(r)).arrayBuffer();else if(r instanceof File||r instanceof Blob)t=await p(r);else return new Uint8Array;return new Uint8Array(t)};export{y as F,C as f};
